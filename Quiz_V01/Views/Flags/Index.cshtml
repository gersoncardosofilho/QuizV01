@model FlagViewModel
@using System.Diagnostics
@using Newtonsoft.Json
@using Quiz_V01.Models

<script src="@Url.Content("~/Scripts/jquery-3.3.1.js")" type="text/javascript"></script>
<script src="@Url.Content("~/Scripts/jquery.unobtrusive-ajax.js")" type="text/javascript"></script>

<meta charset="UTF-8" />


@section scripts
{
    <script>

        //Total de bandeiras
        var totalFlags = @Model.AllFlags.Count;

        //contador de questões
        var counter = 1;

        //nome da bandeira corrente
        var currentFlagName = '@Html.Raw(@Model.flag.FlagName)';

        //url da bandeira a ser renderizada na tela
        var currentFlagUrl = '@Html.Raw(@Model.flag.FlagUrl)';

        //array de nomes para montar as perguntas
        var flagsToQuestion = @Html.Raw(Json.Encode(@Model.FlagsToQuestion));

        //array da colecao corrente
        var flagsCollection = @Html.Raw(Json.Encode(@Model.AllFlags));


        $(document).ready(function() {

            montaTela(currentFlagUrl, counter, totalFlags, flagsToQuestion);

            $("body").delegate("div.box","click",
                function() {
                    var resposta = $(this).children().text();
                    avaliarResposta(currentFlagName, resposta, flagsCollection);
                });

            function avaliarResposta(currentFlagName, resposta, flagsCollection) {
                console.log("resposta atual:" + resposta);
                console.log("flag atual: " + currentFlagName);
                console.log("current collection" + flagsCollection);

                var url = "/Flags/CheckResponse";

                //incrementa contador de questões
                counter++;

                $.post(url,
                    {
                        currentFlagName: currentFlagName,
                        response: resposta,
                        currentCollection: flagsCollection
                    },
                    function(data) {
                        var obj = JSON && JSON.parse(data) || $.parseJSON(data);
                        currentFlagUrl = obj.flag.FlagUrl;
                        totalFlags = obj.AllFlags.length;
                        flagsToQuestion = obj.FlagsToQuestion;

                        montaTela(currentFlagUrl, counter, totalFlags, flagsToQuestion);

                    }
                );
            }

            function montaTela(urlCurrentFlag, counter, totalFlags, questionsCollection) {

                //limpa as questões na montagem da tela
                $('#questions').empty();

                $('#imgCurrentFlag').attr('src', urlCurrentFlag);
                $('#lblCounter').html('Questão ' + counter + ' de 10');

                for (var i = 0; i < questionsCollection.length; i++) {
                    $('#questions').append('<div class="box"><p>' + questionsCollection[i] + '</p></div>');
                }
            }
        });

    </script>
}


@{
    ViewBag.Title = "Index";
    Layout = "~/Views/Shared/_Layout.cshtml";

    var currentFlag = @Model.flag;
    var allFlags = @Model.AllFlags;
    var questionArray = @Model.FlagsToQuestion.ToList();

}

<style>
    .box {
        background-color: cornflowerblue;
        width: 300px;
        height: 50px;
        margin-top: 20px;
        margin-bottom: 20px;
        padding: 10px;
    }
</style>


<div class="container" style="margin-top: 50px">

    <div class="row" style="margin-bottom: 30px">
        <div class="col-md-12">
            <h2 class="text-center" id="lblCounter"></h2>
        </div>
    </div>

    <div class="row">
        <div class="col-md-1"></div>

        <div class="col-md-4">
            <img id="imgCurrentFlag" width="200" height="auto" />
        </div>

        <div class="col-md-6">
            <div id="questions"></div>
            <h3 id="lblResposta"></h3>
        </div>

        <div class="col-md-1"></div>
    </div>
</div>

<hr/>

<div class="text-center">@Html.ActionLink("Reiniciar", "Index", "Flags", new {@class = "btn btn-lg btn-primary" })</div>
